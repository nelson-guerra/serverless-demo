service: softtek-serverless

frameworkVersion: '3'

package:
   individually: true

provider:
   name: aws
   runtime: nodejs16.x
   environment:
      DYNAMODB_TABLE: ${self:service}-${sls:stage}
   iam:
      role:
         statements:
            - Effect: Allow
              Action:
                 - dynamodb:Query
                 - dynamodb:Scan
                 - dynamodb:GetItem
                 - dynamodb:PutItem
                 - dynamodb:UpdateItem
                 - dynamodb:DeleteItem
              Resource: 'arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}'

functions:
   swapi-vehicles:
      handler: src/functions/swapi/vehicles/vehiclesHandler.handler
      events:
         - httpApi: 'GET /swapi-vehicles'
   swapi-people:
      handler: src/functions/swapi/people/peopleHandler.handler
      events:
         - httpApi: 'GET /swapi-people'
   articles-add:
      handler: src/functions/articles/createArticleHandler.handler
      events:
         - httpApi: 'POST /articles/add'
   articles-list:
      handler: src/functions/articles/getArticlesHandler.handler
      events:
         - httpApi: 'GET /articles/list'

plugins:
   - serverless-esbuild
   - serverless-offline

custom:
   esbuild:
      minify: false
      bundle: true
      watch:
         pattern: ['src/**/*.ts']
         ignore: ['.serverless/**/*', '.build', '.esbuild']

resources:
   Resources:
      TodosDynamoDbTable:
         Type: AWS::DynamoDB::Table
         Properties:
            TableName: ${self:provider.environment.DYNAMODB_TABLE}
            BillingMode: PAY_PER_REQUEST
            AttributeDefinitions:
               - AttributeName: id
                 AttributeType: S
            KeySchema:
               - AttributeName: id
                 KeyType: HASH
